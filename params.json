{"tagline":"Run sandboxed MongoDB from a python app.","body":"Mongo Box\r\n---------\r\n\r\nMongo Box helps starting and stopping sandboxed MongoDB instance\r\nfrom within a Python process. MongoDB instance is created with a\r\ntemporary directory to store database file and is configured to\r\nbe as lightweight as possible. It will choose a free port on localhost, \r\nso it will not interfere with default MongoDB processes. \r\nIt is primarily expected to be used in unit tests and for prototyping concepts.\r\n\r\nA typical use of a Mongo Box:\r\n\r\n```python\r\nfrom mongobox import MongoBox\r\n\r\nbox = MongoBox()\r\nbox.start()\r\n\r\nclient = box.client() # pymongo client \r\nassert client.alive()\r\n\r\n# do stuff with Mongo\r\n\r\nbox.stop()\r\nassert not client.alive()\r\n```\r\n\r\nNose\r\n----\r\n\r\nMongo Box comes with a Nose plugin which is automatically installed.\r\nIf used as a plugin, port of the running instance will be exported\r\nin environment variable `MONGOBOX_PORT`. This name can be overridden\r\nin settings.\r\n\r\nThe plugin exposes several configuration options. To see them, run:\r\n\r\n    nosetests --help\r\n\r\nThe options you are interested in start with `--mongobox-`.\r\n","name":"Mongobox","note":"Don't delete this file! It's used internally to help with page regeneration.","google":""}